generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id           Int      @id @default(autoincrement())
  username          String   @unique
  email             String   @unique
  password          String
  first_name        String
  last_name         String
  own_referral_code String?  @unique
  point_balance     Int      @default(0)
  role_id           Int
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  role              Role     @relation(fields: [role_id], references: [id])
  event             Event[]   @relation("EventOrganizer")
  referralsGiven    Referral[] @relation("Referrer")
  referralsReceived Referral[] @relation("Referred")
  transaction       Transaction[]
  userDiscounts     UserDiscount[]
  reviews           Review[]

  @@index([username])
  @@index([email])
  @@index([own_referral_code])
}

model Referral {
  id             Int      @id @default(autoincrement())
  referral_code  String
  referrer_id    Int
  referred_id    Int
  points_awarded Int
  created_at     DateTime @default(now())
  valid_until    DateTime
  referrer       User     @relation("Referrer", fields: [referrer_id], references: [user_id])
  referred       User     @relation("Referred", fields: [referred_id], references: [user_id])

  @@unique([referrer_id, referred_id])
  @@index([referral_code])
  @@index([referrer_id])
  @@index([referred_id])
}


model Role {
  id        Int    @id @default(autoincrement())
  role_name String
  User      User[]
}

model Event {
  event_id         Int         @id @default(autoincrement())
  organizer_id     Int
  event_name       String
  event_description String     @db.VarChar(2000)
  original_price   Float
  start_date       DateTime
  end_date         DateTime
  location_id      Int
  total_seats      Int
  available_seats  Int
  earlybird_promo  Boolean     @default(false)
  created_at       DateTime    @default(now())
  updated_at       DateTime    @updatedAt
  organizer        User        @relation("EventOrganizer", fields: [organizer_id], references: [user_id])
  location         Location    @relation(fields: [location_id], references: [location_id])
  categories       Event_Category[]
  transactions     Transaction[]
  reviews          Review[]
}

model Location {
  location_id Int     @id @default(autoincrement())
  city_name   String
  events      Event[]
}

model Category {
  category_id Int             @id @default(autoincrement())
  name        String
  events      Event_Category[]
}

model Event_Category {
  event_id    Int
  category_id Int
  event       Event    @relation(fields: [event_id], references: [event_id])
  category    Category @relation(fields: [category_id], references: [category_id])

  @@id([event_id, category_id])
}


model Transaction {
  transaction_id  Int     @id @default(autoincrement())
  event_id        Int
  user_id         Int
  number_of_ticket Int
  type            String  //'free' or 'paid'
  final_price     Float
  discount_applied Float
  earlybird_applied Float
  points_redeemed Int
  ticket_status   String  // Can be "pending" or "success-paid"
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  event           Event   @relation(fields: [event_id], references: [event_id])
  user            User    @relation(fields: [user_id], references: [user_id])
}

model UserDiscount {
  discount_id        Int      @id @default(autoincrement())
  user_id            Int
  discount_percentage Decimal
  is_redeemed        Boolean
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  user               User     @relation(fields: [user_id], references: [user_id])

  @@index([user_id])
}

model Review {
  review_id  Int      @id @default(autoincrement())
  user_id    Int
  event_id   Int
  rating     Float
  comment    String   @db.VarChar(2000)
  created_at DateTime @default(now())
  user  User  @relation(fields: [user_id], references: [user_id])
  event Event @relation(fields: [event_id], references: [event_id])
}